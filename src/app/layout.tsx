import "~/styles/globals.css";

import { GeistSans } from "geist/font/sans";
import { type Metadata } from "next";

import { TRPCReactProvider } from "~/trpc/react";

import Link from "next/link";
import { env } from "~/env";
import { Button } from "~/components/ui/button";
import { Sheet, SheetTrigger, SheetContent } from "~/components/ui/sheet";
import {
  ActivityIcon,
  HomeIcon,
  MenuIcon,
  MountainIcon,
  NewspaperIcon,
  UsersIcon,
} from "lucide-react";
import { DialogDescription, DialogTitle } from "@radix-ui/react-dialog";
import { getServerAuthSession } from "~/server/auth";
import SidebarUserMenu from "~/components/layout/sidebar-usermenu";
import { ThemeProvider } from "next-themes";
import { CookieBanner } from "~/components/cookie-banner/cookieBanner";
import { Toaster } from "~/components/ui/toaster";

const navigation = [
  { href: "/", label: "Home", icon: HomeIcon },
  { href: "/blog", label: "Blog", icon: NewspaperIcon },
  { href: "/customers", label: "Customers", icon: UsersIcon },
  { href: "/analytics", label: "Analytics", icon: ActivityIcon },
];

export const metadata: Metadata = {
  title: env.APP_NAME,
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const session = await getServerAuthSession();

  return (
    <html
      lang="en"
      className={`${GeistSans.variable}`}
      suppressHydrationWarning
    >
      <body>
        <TRPCReactProvider>
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            <div className="flex h-screen w-full">
              <div className="hidden lg:block lg:w-64 lg:shrink-0 lg:border-r">
                <div className="flex h-full flex-col justify-between px-4 py-6">
                  <div className="space-y-6">
                    <Link
                      href={env.APP_URL}
                      className="flex items-center gap-2 font-bold"
                      prefetch={false}
                    >
                      <MountainIcon className="h-6 w-6" />
                      <span className="font-mono text-lg">{env.APP_NAME}</span>
                    </Link>
                    <nav className="space-y-1">
                      {navigation.map((item) => (
                        <Link
                          key={item.href}
                          href={item.href}
                          className="flex items-center gap-2 rounded-md px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-200 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-50"
                          prefetch={false}
                        >
                          <item.icon className="h-5 w-5" />
                          {item.label}
                        </Link>
                      ))}
                    </nav>
                  </div>
                  <SidebarUserMenu session={session} />
                </div>
              </div>
              <div className="flex-1">
                <header className="sticky top-0 z-10 border-b px-4 py-3 lg:hidden">
                  <div className="flex items-center justify-between">
                    <Link
                      href={env.APP_URL}
                      className="flex items-center gap-2 font-bold"
                      prefetch={false}
                    >
                      <MountainIcon className="h-6 w-6" />
                      <span className="font-mono text-lg">{env.APP_NAME}</span>
                    </Link>
                    <Sheet>
                      <SheetTrigger asChild>
                        <Button variant="outline" size="icon">
                          <MenuIcon className="h-6 w-6" />
                          <span className="sr-only">Toggle navigation</span>
                        </Button>
                      </SheetTrigger>
                      <SheetContent side="left" className="w-64">
                        <DialogTitle className="sr-only">
                          Navigation
                        </DialogTitle>
                        <DialogDescription className="sr-only">
                          Navigation menu
                        </DialogDescription>
                        <div className="flex h-full flex-col justify-between px-4 py-6">
                          <div className="space-y-6">
                            <nav className="space-y-1">
                              {navigation.map((item) => (
                                <Link
                                  key={item.href}
                                  href={item.href}
                                  className="flex items-center gap-2 rounded-md px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-200 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-50"
                                  prefetch={false}
                                >
                                  <item.icon className="h-5 w-5" />
                                  {item.label}
                                </Link>
                              ))}
                            </nav>
                          </div>
                          <SidebarUserMenu session={session} />
                        </div>
                      </SheetContent>
                    </Sheet>
                  </div>
                </header>
                <main className="p-4 lg:p-8">{children}</main>
              </div>
            </div>
            <CookieBanner />
            <Toaster />
          </ThemeProvider>
        </TRPCReactProvider>
      </body>
    </html>
  );
}
